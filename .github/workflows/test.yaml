name: Build & Test

on: [push, pull_request]

jobs:

  aqua:
    name: Aqua scanner
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
  
      - name: Run Aqua scanner
        uses: docker://aquasec/aqua-scanner
        with:
          args: trivy fs --scanners config,vuln,secret .
          # To customize which severities to scan for, add the following flag: --severity UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
          # To enable SAST scanning, add: --sast
          # To enable reachability scanning, add: --reachability
          # To enable npm/dotnet/gradle non-lock file scanning, add: --package-json / --dotnet-proj / --gradle
        env:
          AQUA_KEY: ${{ secrets.AQUA_KEY }}
          AQUA_SECRET: ${{ secrets.AQUA_SECRET }}
          GITHUB_TOKEN: ${{ github.token }}
          AQUA_URL: https://api.dev.supply-chain.cloud.aquasec.com
          CSPM_URL: https://stage.api.cloudsploit.com
          TRIVY_RUN_AS_PLUGIN: 'aqua'
          # For http/https proxy configuration add env vars: HTTP_PROXY/HTTPS_PROXY, CA-CRET (path to CA certificate)

  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.6'
          cache: 'pip'
      - run: pip install -r requirements.txt

      - name: Run DVGA
        run: |
          nohup python3 ./app.py &

      - name: Wait for server (sleep 5 secs)
        run: |
          sleep 5

      - name: Run DVGA Tests
        run: |
          python3 -m pytest tests/*

  build:
    runs-on: ubuntu-22.04
    needs: [test, aqua]
    steps:
      - uses: actions/checkout@v3
      
      - name: Build Docker Image
        run: docker build -t "$GITHUB_REPOSITORY:$GITHUB_RUN_NUMBER" .
